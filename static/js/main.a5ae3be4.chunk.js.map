{"version":3,"sources":["components/table.js","api/users.js","api/categories.js","App.jsx","api/products.js","index.jsx"],"names":["Table","products","defualtSort","type","mouseClicks","useState","sort","setSort","sortedProducts","order","firstProduct","secondProduct","id","firstProductName","name","secondProductName","localeCompare","firstProductCategory","category","title","secondProductCategory","firstProductUserName","user","secondProductUserName","orderClassName","className","map","header","href","onClick","product","icon","sex","ownerId","categoryId","categoriesFromServer","find","currCategory","usersFromServer","currUser","filter","Boolean","App","selectedUser","setSelectedUser","selectedCategories","setSelectedCategories","inputQuery","setInputQuery","selectedProducts","toLowerCase","includes","trim","length","placeholder","value","onChange","event","target","selectedCategory","toggleCategories","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a5ae3be4.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\nexport const Table = ({ products }) => {\n  const defualtSort = {\n    type: '',\n    mouseClicks: 0,\n  };\n\n  const [sort, setSort] = useState({ ...defualtSort });\n  const sortedProducts = [...products];\n  const tableHeaders = ['ID', 'Product', 'Category', 'User'];\n\n  const pickSortingType = (type) => {\n    if (sort.type !== type) {\n      setSort({ type, mouseClicks: 1 });\n    } else {\n      setSort({ ...sort, mouseClicks: sort.mouseClicks + 1 });\n    }\n  };\n\n  if (sort.mouseClicks > 2) {\n    setSort({ ...defualtSort });\n  }\n\n  const order = sort.mouseClicks === 1 ? 1 : -1;\n\n  switch (sort.type) {\n    case 'ID':\n    {\n      sortedProducts.sort((firstProduct, secondProduct) => (\n        order * (firstProduct.id - secondProduct.id)));\n      break;\n    }\n\n    case 'Product':\n      sortedProducts.sort((firstProduct, secondProduct) => {\n        const firstProductName = firstProduct.name;\n        const secondProductName = secondProduct.name;\n\n        if (order === 1) {\n          return firstProductName.localeCompare(secondProductName);\n        }\n\n        return secondProductName.localeCompare(firstProductName);\n      });\n      break;\n    case 'Category':\n      sortedProducts.sort((firstProduct, secondProduct) => {\n        const firstProductCategory = firstProduct.category.title;\n        const secondProductCategory = secondProduct.category.title;\n\n        if (order === 1) {\n          return firstProductCategory.localeCompare(secondProductCategory);\n        }\n\n        return secondProductCategory.localeCompare(firstProductCategory);\n      });\n      break;\n    case 'User': {\n      sortedProducts.sort((firstProduct, secondProduct) => {\n        const firstProductUserName = firstProduct.user.name;\n        const secondProductUserName = secondProduct.user.name;\n\n        if (order === 1) {\n          return firstProductUserName.localeCompare(secondProductUserName);\n        }\n\n        return secondProductUserName.localeCompare(firstProductUserName);\n      });\n      break;\n    }\n\n    default:\n      break;\n  }\n\n  const orderClassName = order === -1 ? 'fa-sort-down' : 'fa-sort-up';\n\n  return (\n    <table\n      data-cy=\"ProductTable\"\n      className=\"table is-striped is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          {tableHeaders.map(header => (\n            <th>\n              <span className=\"is-flex is-flex-wrap-nowrap\">\n                {header}\n\n                <a href=\"#/\" onClick={() => pickSortingType(header)}>\n                  <span className=\"icon\">\n                    <i\n                      data-cy=\"SortIcon\"\n                      className={`fas ${sort.type === header ? orderClassName : 'fa-sort'}`}\n                    />\n                  </span>\n                </a>\n              </span>\n            </th>\n          ))}\n        </tr>\n      </thead>\n\n      <tbody>\n        {sortedProducts.map(product => (\n          <tr data-cy=\"Product\">\n            <td className=\"has-text-weight-bold\" data-cy=\"ProductId\">\n              {product.id}\n            </td>\n\n            <td data-cy=\"ProductName\">{product.name}</td>\n            <td data-cy=\"ProductCategory\">{`${product.category.icon} - ${product.category.title}`}</td>\n\n            <td\n              data-cy=\"ProductUser\"\n              className={`${product.user.sex === 'm' ? 'has-text-link' : 'has-text-danger'}`}\n            >\n              {product.user.name}\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","export default [\n  { id: 1, name: 'Roma', sex: 'm' },\n  { id: 2, name: 'Anna', sex: 'f' },\n  { id: 3, name: 'Max', sex: 'm' },\n  { id: 4, name: 'John', sex: 'm' },\n];\n","export default [\n  {\n    id: 1,\n    title: 'Grocery',\n    icon: 'üçû',\n    ownerId: 2,\n  },\n  {\n    id: 2,\n    title: 'Drinks',\n    icon: 'üç∫',\n    ownerId: 1,\n  },\n  {\n    id: 3,\n    title: 'Fruits',\n    icon: 'üçè',\n    ownerId: 2,\n  },\n  {\n    id: 4,\n    title: 'Electronics',\n    icon: 'üíª',\n    ownerId: 1,\n  },\n  {\n    id: 5,\n    title: 'Clothes',\n    icon: 'üëö',\n    ownerId: 3,\n  },\n];\n","/* eslint-disable jsx-a11y/accessible-emoji */\nimport React, { useState } from 'react';\nimport './App.scss';\nimport { Table } from './components/table';\n\nimport usersFromServer from './api/users';\nimport categoriesFromServer from './api/categories';\nimport productsFromServer from './api/products';\n\nconst products = productsFromServer.map((product) => {\n  const category = categoriesFromServer\n    .find(currCategory => currCategory.id === product.categoryId);\n\n  if (!category) {\n    return null;\n  }\n\n  const user = usersFromServer\n    .find(currUser => currUser.id === category.ownerId);\n\n  return {\n    ...product,\n    user,\n    category,\n  };\n}).filter(Boolean);\n\nexport const App = () => {\n  const [selectedUser, setSelectedUser] = useState('');\n  const [selectedCategories, setSelectedCategories] = useState([]);\n  const [inputQuery, setInputQuery] = useState('');\n\n  let selectedProducts = products;\n\n  if (selectedUser) {\n    selectedProducts = selectedProducts\n      .filter(product => product.user.name === selectedUser);\n  }\n\n  if (inputQuery) {\n    selectedProducts = selectedProducts\n      .filter(product => product.name\n        .toLowerCase()\n        .includes(inputQuery.trim().toLowerCase()));\n  }\n\n  if (selectedCategories.length) {\n    selectedProducts = selectedProducts\n      .filter(product => selectedCategories.includes(product.category.title));\n  }\n\n  const toggleCategories = (category) => {\n    if (selectedCategories.includes(category.title)) {\n      setSelectedCategories(selectedCategories\n        .filter(selectedCategory => (\n          selectedCategory !== category.title)));\n    } else {\n      setSelectedCategories([...selectedCategories,\n        category.title]);\n    }\n  };\n\n  return (\n    <div className=\"section\">\n      <div className=\"container\">\n        <h1 className=\"title\">Product Categories</h1>\n\n        <div className=\"block\">\n          <nav className=\"panel\">\n            <p className=\"panel-heading\">Filters</p>\n\n            <p className=\"panel-tabs has-text-weight-bold\">\n              <a\n                data-cy=\"FilterAllUsers\"\n                href=\"#/\"\n                className={`${!selectedUser && 'is-active'}`}\n                onClick={() => {\n                  setSelectedUser('');\n                }}\n              >\n                All\n              </a>\n              {usersFromServer.map(user => (\n                <a\n                  key={user.id}\n                  data-cy=\"FilterUser\"\n                  href={`#${user.name}`}\n                  className={`${selectedUser === user.name && 'is-active'}`}\n                  onClick={() => {\n                    setSelectedUser(user.name);\n                  }}\n\n                >\n                  {user.name}\n                </a>\n              ))}\n            </p>\n\n            <div className=\"panel-block\">\n              <p className=\"control has-icons-left has-icons-right\">\n                <input\n                  data-cy=\"SearchField\"\n                  type=\"text\"\n                  className=\"input\"\n                  placeholder=\"Search\"\n                  value={inputQuery}\n                  onChange={event => setInputQuery(event.target.value)}\n                />\n\n                <span className=\"icon is-left\">\n                  <i className=\"fas fa-search\" aria-hidden=\"true\" />\n                </span>\n\n                <span className=\"icon is-right\">\n                  {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n                  {inputQuery && (\n                  <button\n                    data-cy=\"ClearButton\"\n                    type=\"button\"\n                    className=\"delete\"\n                    onClick={() => setInputQuery('')}\n                  />\n                  )}\n                </span>\n              </p>\n            </div>\n\n            <div className=\"panel-block is-flex-wrap-wrap\">\n              <a\n                href=\"#/\"\n                data-cy=\"AllCategories\"\n                className={`button is-success mr-6 ${selectedCategories.length && 'is-outlined'}`}\n                onClick={() => {\n                  setSelectedCategories([]);\n                }}\n              >\n                All\n              </a>\n              {categoriesFromServer.map(category => (\n                <a\n                  data-cy=\"Category\"\n                  className={`button mr-2 my-1 ${selectedCategories.includes(category.title) && 'is-info'}`}\n                  href={`#${selectedCategories}`}\n                  onClick={() => {\n                    toggleCategories(category);\n                  }}\n                >\n                  {category.title}\n                </a>\n              ))}\n            </div>\n\n            <div className=\"panel-block\">\n              <a\n                data-cy=\"ResetAllButton\"\n                href=\"#/\"\n                className=\"button is-link is-outlined is-fullwidth\"\n                onClick={() => {\n                  setSelectedUser('');\n                  setSelectedCategories('');\n                }}\n              >\n                Reset all filters\n              </a>\n            </div>\n          </nav>\n        </div>\n\n        <div className=\"box table-container\">\n          {\n            !selectedProducts.length ? (\n              <p data-cy=\"NoMatchingMessage\">\n                No products matching selected criteria\n              </p>\n            ) : (\n              <Table products={selectedProducts} />\n            )\n         }\n\n        </div>\n      </div>\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Milk',\n    categoryId: 2,\n  },\n  {\n    id: 2,\n    name: 'Bread',\n    categoryId: 1,\n  },\n  {\n    id: 3,\n    name: 'Eggs',\n    categoryId: 1,\n  },\n  {\n    id: 4,\n    name: 'Jacket',\n    categoryId: 5,\n  },\n  {\n    id: 5,\n    name: 'Sugar',\n    categoryId: 1,\n  },\n  {\n    id: 6,\n    name: 'Banana',\n    categoryId: 3,\n  },\n  {\n    id: 7,\n    name: 'Beer',\n    categoryId: 2,\n  },\n  {\n    id: 8,\n    name: 'Socks',\n    categoryId: 5,\n  },\n  {\n    id: 9,\n    name: 'Apples',\n    categoryId: 3,\n  },\n];\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}